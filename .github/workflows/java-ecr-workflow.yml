# 简洁的 Java ECR 构建 Workflow
name: Build Java to Docker Image and Push to ECR

on:
  workflow_call:
    inputs:
      aws-region:
        description: "AWS region"
        required: false
        default: "ap-east-1"
        type: string
      aws-account-id:
        description: "AWS Account ID"
        required: false
        default: "865258959313"
        type: string
    secrets:
      aws-access-key-id:
        description: "AWS Access Key ID"
        required: true
      aws-secret-access-key:
        description: "AWS Secret Access Key"
        required: true
    outputs:
      image-uri:
        description: "Built image URI"
        value: ${{ jobs.build-push.outputs.image-uri }}
      image-tag:
        description: "Built image tag"
        value: ${{ jobs.build-push.outputs.image-tag }}

jobs:
  build-push:
    runs-on: ubuntu-latest
    
    env:
      AWS_REGION: ${{ inputs.aws-region }}
      ECR_REGISTRY: ${{ inputs.aws-account-id }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com
    
    outputs:
      image-uri: ${{ steps.vars.outputs.image-uri }}
      image-tag: ${{ steps.vars.outputs.image-tag }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set Variables
        id: vars
        run: |
          TIMESTAMP=$(date -u '+%Y%m%d-%H%M%S')
          BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/\//-/g' | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          
          IMAGE_TAG="${BRANCH_NAME}-${SHORT_SHA}-${TIMESTAMP}"
          IMAGE_URI="${ECR_REGISTRY}/${REPO_NAME}:${IMAGE_TAG}"
          
          echo "ECR_REPOSITORY=$REPO_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          
          echo "image-uri=$IMAGE_URI" >> $GITHUB_OUTPUT
          echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}
          
      - name: Create ECR Repository
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region $AWS_REGION 2>/dev/null || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY --region $AWS_REGION
          
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
          
      - name: Build and Push with Dockerfile
        uses: docker/build-push-action@v6
        with:
          context: .
          file: https://github.com/wujunlin555/workflows/.github/workflows/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_URI }}
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.TIMESTAMP }}
          build-args: |
            VERSION=${{ env.IMAGE_TAG }}
            GIT_COMMIT=${{ github.sha }}
            GIT_BRANCH=${{ github.ref_name }}
            BUILDTIME=${{ env.TIMESTAMP }}
            
      - name: Build Summary
        run: |
          echo "## 🐳 Build Complete" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`$IMAGE_URI\`" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** \`$IMAGE_TAG\`" >> $GITHUB_STEP_SUMMARY
          echo "**Dockerfile:** \`${{ inputs.dockerfile-path }}\`" >> $GITHUB_STEP_SUMMARY
