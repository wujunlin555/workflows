# 极简版 Harbor 构建 Workflow
name: Build Docker Image and Push to Harbor

on:
  workflow_call:
    inputs:
      harbor_registry:
        description: "Harbor registry URL"
        required: false
        default: "harbor.example.com"
        type: string
      harbor_project:
        description: "Harbor project name"
        required: false
        default: "library"
        type: string
      dockerfile_path:
        description: "Path to Dockerfile"
        required: false
        default: ".github/workflows/Dockerfile"
        type: string
    secrets:
      harbor_username:
        description: "Harbor Username"
        required: true
      harbor_password:
        description: "Harbor Password"
        required: true

jobs:
  build_push:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    env:
      HARBOR_REGISTRY: ${{ inputs.harbor_registry }}
      HARBOR_PROJECT: ${{ inputs.harbor_project }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set Variables
        id: vars
        run: |
          TIMESTAMP=$(date -u '+%Y%m%d-%H%M%S')
          BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/\//-/g' | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          
          IMAGE_TAG="${BRANCH_NAME}-${TIMESTAMP}"
          IMAGE_URI="${HARBOR_REGISTRY}/${HARBOR_PROJECT}/${REPO_NAME}:${IMAGE_TAG}"
          
          echo "HARBOR_REPOSITORY=${REPO_NAME}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "IMAGE_URI=${IMAGE_URI}" >> $GITHUB_ENV
          
          echo "Image: ${IMAGE_URI}"
          
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.harbor_registry }}
          username: ${{ secrets.harbor_username }}
          password: ${{ secrets.harbor_password }}
          
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ inputs.dockerfile_path }}
          push: true
          platforms: linux/amd64
          tags: ${{ env.IMAGE_URI }}
        
      - name: Build Complete
        run: |
          echo "✅ Image pushed: ${{ env.IMAGE_URI }}"
